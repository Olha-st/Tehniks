from products_tab import ProductsTab
from customers_tab import ClientsTab
from suppliers_tab import SuppliersTab
from orders_tab import OrdersTab
from payments_tab import PaymentsTab
from styles import style_table
import sqlite3
from PyQt5.QtWidgets import (
    QDialog, QVBoxLayout, QFormLayout, QLineEdit, QPushButton, QLabel, QSpacerItem,
    QMessageBox, QApplication, QTabWidget, QMainWindow, QHBoxLayout, QSizePolicy
)
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import Qt
import sqlite3
import sys

class LoginDialog(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–í—Ö—ñ–¥")
        self.setFixedSize(400, 450)
        self.setStyleSheet("""
            QDialog {
                background-color: #F4E8FF;
            }
            QLabel {
                font-weight: bold;
            }
            QLineEdit, QPushButton {
                padding: 6px;
                border-radius: 6px;
            }
            QPushButton {
                background-color: #B57EDC;
                color: white;
                font-weight: bold;
            }
        """)

        main_layout = QVBoxLayout()

        # –î–æ–¥–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        image_label = QLabel()
        pixmap = QPixmap("logo.jpg")
        image_label.setPixmap(pixmap.scaledToWidth(150))  # –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è
        if not pixmap.isNull():
            image_label.setPixmap(pixmap.scaledToWidth(200))
        else:
            image_label.setText("–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        image_label.setAlignment(Qt.AlignCenter)
        main_layout.addWidget(image_label)

        # –ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
        welcome_label = QLabel("üåü –ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è\n—Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–π—Å—è –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω—É!")
        welcome_label.setAlignment(Qt.AlignCenter)
        welcome_label.setStyleSheet("""
            QLabel {
                font-size: 11pt;
                font-weight: bold;
                color: #5A2A83;
                margin-bottom: 10px;
            }
        """)
        main_layout.addWidget(welcome_label)


        # –§–æ—Ä–º–∞
        form_layout = QFormLayout()
        self.username_input = QLineEdit()
        self.password_input = QLineEdit()
        self.password_input.setEchoMode(QLineEdit.Password)

        form_layout.addRow("–õ–æ–≥—ñ–Ω:", self.username_input)
        form_layout.addRow("–ü–∞—Ä–æ–ª—å:", self.password_input)

        # –î–æ–¥–∞—î–º–æ –≤—ñ–¥—Å—Ç—É–ø 1 —Å–º –ø—ñ—Å–ª—è –ø–æ–ª—è –ø–∞—Ä–æ–ª—è
        form_layout.addItem(QSpacerItem(0, 18, QSizePolicy.Minimum, QSizePolicy.Fixed))

        # –ö–Ω–æ–ø–∫–∏
        self.login_btn = QPushButton("–£–≤—ñ–π—Ç–∏")
        self.register_btn = QPushButton("–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è")
        self.login_btn.setFixedSize(120, 40)
        self.register_btn.setFixedSize(120, 40)

        self.login_btn.clicked.connect(self.try_login)
        self.register_btn.clicked.connect(self.register_user)

        buttons_layout = QHBoxLayout()
        buttons_layout.setAlignment(Qt.AlignCenter)
        buttons_layout.addSpacing(10)
        buttons_layout.addWidget(self.login_btn)
        buttons_layout.addSpacing(10)
        buttons_layout.addWidget(self.register_btn)
        buttons_layout.addSpacing(10)

        form_layout.addRow("", buttons_layout)

        main_layout.addLayout(form_layout)
        self.setLayout(main_layout)
        self.user_role = None


    def try_login(self):
        username = self.username_input.text().strip()
        password = self.password_input.text().strip()

        conn = sqlite3.connect("appliance_store.db")
        cur = conn.cursor()
        cur.execute("SELECT role FROM users WHERE username=? AND password=?", (username, password))
        result = cur.fetchone()
        conn.close()

        if result:
            self.user_role = result[0]
            self.accept()
        else:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å")

    def register_user(self):
        username = self.username_input.text().strip()
        password = self.password_input.text().strip()

        if not username or not password:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω —ñ –ø–∞—Ä–æ–ª—å")
            return

        conn = sqlite3.connect("appliance_store.db")
        cur = conn.cursor()
        cur.execute("SELECT * FROM users WHERE username=?", (username,))
        if cur.fetchone():
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º –ª–æ–≥—ñ–Ω–æ–º –≤–∂–µ —ñ—Å–Ω—É—î")
        else:
            cur.execute("INSERT INTO users (username, password, role) VALUES (?, ?, ?)", (username, password, "user"))
            conn.commit()
            QMessageBox.information(self, "–£—Å–ø—ñ—Ö", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        conn.close()


class MainWindow(QMainWindow):
    def __init__(self, role):
        super().__init__()
        self.setWindowTitle("–ú–∞–≥–∞–∑–∏–Ω –ø–æ–±—É—Ç–æ–≤–æ—ó —Ç–µ—Ö–Ω—ñ–∫–∏")
        self.setGeometry(100, 100, 1300, 600)
        self.user_role = role

        self.tab_widget = QTabWidget()
        self.tab_widget.setTabPosition(QTabWidget.West)
        self.tab_widget.setStyleSheet("""
            QTabBar::tab {
                background: #D8BFD8;              /* —Å–≤—ñ—Ç–ª–æ-–±—É–∑–∫–æ–≤–∏–π */
                color: black;
                border: 1px solid #A9A9A9;
                padding: 5px 5px;
                font-size: 12px;
                font-weight: bold;
                border-top-left-radius: 10px;
                border-top-right-radius: 10px;
                min-width: 10px;
                height: 100px;
            }

            QTabBar::tab:selected {
                background: #9370DB;              /* –∞–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ - —Ç–µ–º–Ω—ñ—à–∏–π –±—É–∑–∫–æ–≤–∏–π */
                color: white;
            }

            QTabBar::tab:hover {
                background: #BA55D3;
                color: white;
            }

            QTabWidget::pane {
                border: 2px solid #9370DB;
                border-radius: 5px;
                padding: 5px;
            }
            """)
        



        # –°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä—é—î–º–æ ClientsTab
        self.clients_tab = ClientsTab()

        # –°—Ç–≤–æ—Ä—é—î–º–æ ProductsTab —ñ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        self.products_tab = ProductsTab()

        # –¢–∏–º—á–∞—Å–æ–≤–æ —Å—Ç–≤–æ—Ä—é—î–º–æ orders_tab –±–µ–∑ –ø–æ—Å–∏–ª–∞–Ω—å
        self.orders_tab = OrdersTab()

        # –°—Ç–≤–æ—Ä—é—î–º–æ PaymentsTab —ñ –ø–µ—Ä–µ–¥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—à—ñ –≤–∫–ª–∞–¥–∫–∏
        self.payments_tab = PaymentsTab(self.orders_tab, self.clients_tab)

        # –¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —É OrdersTab
        self.orders_tab.payments_tab = self.payments_tab
        self.orders_tab.customers_tab = self.clients_tab
        self.orders_tab.products_tab = self.products_tab 

        # –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó UI
        self.init_ui()

    def init_ui(self):
        if self.user_role == "admin":
            # –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –±–∞—á–∏—Ç—å —É—Å—ñ –≤–∫–ª–∞–¥–∫–∏
            self.tab_widget.addTab(self.products_tab, "–¢–æ–≤–∞—Ä–∏")
            self.tab_widget.addTab(self.orders_tab, "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            self.tab_widget.addTab(self.clients_tab, "–ö–ª—ñ—î–Ω—Ç–∏")
            self.tab_widget.addTab(self.payments_tab, "–û–ø–ª–∞—Ç–∏")
            # self.tab_widget.addTab(self.suppliers_tab, "–ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∏")
        elif self.user_role == "user":
            # –û–±–º–µ–∂–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –¥–ª—è –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            self.products_tab.disable_editing()
            self.orders_tab.restrict_user_mode()

            self.tab_widget.addTab(self.products_tab, "–¢–æ–≤–∞—Ä–∏")
            self.tab_widget.addTab(self.orders_tab, "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è")


        self.setCentralWidget(self.tab_widget)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    login = LoginDialog()
    if login.exec_() == QDialog.Accepted:
        window = MainWindow(login.user_role)
        window.show()
        sys.exit(app.exec_())

